class Solution:
    def differenceOfSum(self, nums: List[int]) -> int:
        single = []
        double = []
        triple = []
        quadruple = []
        double_int = []
        triple_int = []
        quadruple_int = []
        for i in range(len(nums)):
            if 10 <= nums[i] < 100:
                double.append(str(nums[i]))
            elif 100 <= nums[i] < 1000:
                triple.append(str(nums[i]))
            elif 1000 <= nums[i] <= 2000:
                quadruple.append(str(nums[i]))
            else:
                single.append((nums[i]))
        for i in range(len(double)):
            double_int.append(int(double[i][0]))
            double_int.append(int(double[i][1]))
        for i in range(len(triple)):
            triple_int.append(int(triple[i][0]))
            triple_int.append(int(triple[i][1]))
            triple_int.append(int(triple[i][2]))
        for i in range(len(quadruple)):
            quadruple_int.append(int(quadruple[i][0]))
            quadruple_int.append(int(quadruple[i][1]))
            quadruple_int.append(int(quadruple[i][2]))
            quadruple_int.append(int(quadruple[i][3]))
        digit_sum = sum(single)+sum(double_int)+sum(triple_int)+sum(quadruple_int)
        element_sum = sum(nums)
        result = abs(element_sum-digit_sum)
        return result
